#!/bin/bash

## Î≥ÄÏàò ÏÑ§Ï†ï

txtrst='\033[1;37m' # White
txtred='\033[1;31m' # Red
txtylw='\033[1;33m' # Yellow
txtpur='\033[1;35m' # Purple
txtgrn='\033[1;32m' # Green
txtgra='\033[1;30m' # Gray

EXECUTION_PATH=$(pwd)
SHELL_SCRIPT_PATH=$(dirname $0)
BRANCH=$1
PROFILE=$2


function pull() {
  echo -e ""
  echo -e "${txtgrn}>> Pull Request üèÉ‚ôÇÔ∏è ${txtrst}"
    git pull origin $1
}

function build() {
  echo -e ""
  echo -e "${txtgrn}>> Build ÏãúÏûë üèÉ${txtrst}"
    ./gradlew build
}

function findPid() {
  echo -e ""
  echo -e "${txtgrn}>> ÌòÑÏû¨ Ïã§Ìñâ Ï§ëÏù∏ ÌîÑÎ°úÏÑ∏Ïä§ pid ÌôïÏù∏${txtrst}"
  CURRENT_PID=$(pgrep -f subway)
  echo -e ">> ÌòÑÏû¨ Ïã§Ìñâ Ï§ëÏù∏ Ïï†ÌîåÎ¶¨ÏºÄÏù¥ÏÖò pid: $CURRENT_PID"
}

function killPid() {
  echo -e ""
  if [ -z "$CURRENT_PID" ]; then
    echo "${txtylw}>> ÌòÑÏû¨ Ïã§Ìñâ Ï§ëÏù∏ Ïï†ÌîåÎ¶¨ÏºÄÏù¥ÏÖòÏù¥ ÏóÜÏäµÎãàÎã§.${txtrst}"
  else
    echo "> kill -2 $CURRENT_PID"
    sleep 5
  fi
}

function deploy() {
  JAR_NAME=$(ls -tr $EXECUTION_PATH/build/libs/ | grep jar | tail -n 1)
  echo -e "> jar name: $JAR_NAME"
  nohup jar -jar -Dspring.profiles.active=$2 $EXECUTION_PATH/build/libs/JAR_NAME 2>&1 &
}


function check_df() {
    git fetch
    master=$(git rev-parse $BRANCH)
    remote=$(git rev-parse origin/$BRANCH)

    if [[ $master == $remote ]]; then
      echo -e "[$(date)] Nothing to do!!! üò´"
      exit 0
    else
      pull
      build
      findPid
      killPid
      deploy
    fi
}

## Ï°∞Í±¥ ÏÑ§Ï†ï
if [[ $# -ne 2 ]]
then
  echo -e "${txtylw}=======================================${txtrst}"
  echo -e "${txtgrn}  << Ïä§ÌÅ¨Î¶ΩÌä∏ üßê >>${txtrst}"
  echo -e ""
  echo -e "${txtgrn} $0 Î∏åÎûúÏπòÏù¥Î¶Ñ ${txtred}{ prod | dev }"
  echo -e "${txtylw}=======================================${txtrst}"
  exit 0
fi
check_df
