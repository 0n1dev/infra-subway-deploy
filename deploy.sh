#!/bin/bash

## Î≥ÄÏàò ÏÑ§Ï†ï

txtrst='\033[1;37m' # White
txtred='\033[1;31m' # Red
txtylw='\033[1;33m' # Yellow
txtpur='\033[1;35m' # Purple
txtgrn='\033[1;32m' # Green
txtgra='\033[1;30m' # Gray


EXECUTION_PATH=$(pwd)
SHELL_SCRIPT_PATH=$(dirname $0)
BRANCH=$1
PROFILE=$2
FOUND_PID=0

## Ï°∞Í±¥ ÏÑ§Ï†ï
if [[ $# -ne 2 ]]
then
    echo -e "${txtylw}=======================================${txtrst}"
    echo -e "${txtgrn}  << Ïä§ÌÅ¨Î¶ΩÌä∏ üßê >>${txtrst}"
    echo -e ""
    echo -e "${txtgrn} $0 Î∏åÎûúÏπòÏù¥Î¶Ñ ${txtred}{ prod | dev }"
    echo -e "${txtylw}=======================================${txtrst}"
    exit
fi

## branch Î≥ÄÍ≤Ω ÌôïÏù∏ (github branch Î≥ÄÍ≤ΩÏù¥ ÏûàÎäî Í≤ΩÏö∞)
function check_df() {
  git fetch
  master=$(git rev-parse $BRANCH)
  remote=$(git rev-parse origin/$BRANCH)

  if [[ $master == $remote ]]; then
    echo -e "[$(date)] Nothing to do!!! üò´"
    exit 0
  fi
}


## Ï†ÄÏû•ÏÜå pull
function pull() {
  echo -e ""
  echo -e ">> Pull Request üèÉ‚ôÇÔ∏è "
  git pull origin "$BRANCH"
}


## gradle build
function gradle_build() {
    echo -e ""
    echo -e ">> Gradle Build üèÉ‚ôÇÔ∏è "
    ./gradlew clean build
}


## ÌîÑÎ°úÏÑ∏Ïä§ pidÎ•º Ï∞æÎäî Î™ÖÎ†πÏñ¥
function find_pid() {
  echo -e ""
  echo -e ">> Find Pid üèÉ‚ôÇÔ∏è "
  FOUND_PID=$(ps -ef | grep 'subway' | grep -v 'grep' | awk '{ printf $2 }')
}


## ÌîÑÎ°úÏÑ∏Ïä§Î•º Ï¢ÖÎ£åÌïòÎäî Î™ÖÎ†πÏñ¥
function kill_process() {
  echo -e ""
  echo -e ">> Kill Process üèÉ‚ôÇÔ∏è "
  if [[ $FOUND_PID == 0 ]]; then
      echo ">> PID NOT FOUND"
  else
    echo -e ">> Kill process $FOUND_PID"
    kill -9 $FOUND_PID
  fi
}


## Î∞∞Ìè¨
function deploy() {
  echo -e ""
  echo -e ">> Deploy üèÉ‚ôÇÔ∏è "
  jar=$(find $EXECUTION_PATH/build -name "*jar")
  nohup java -jar -Dspring.profiles.active=$PROFILE $EXECUTION_PATH/build/libs/subway-*.jar 1> $EXECUTION_PATH/log/subway.log 2>&1 &
}

## Ï†ÑÏ≤¥ ÎèôÏûë ÏàòÌñâ
function start() {
 pull;
 check_df;
 gradle_build;
 find_pid;
 kill_process;
 deploy;
}


start;
